1. storage class (in DynamoDB):
1.1. deprecated
1.2. RelevanceUrl
	hash key: WORD (string)
	sort key: RELEVANCE_URL (string)
1.3. Hits
	hash key: WORD 
	sort key: URL
	attribute: HITS (List<Hit>)
1.4. PageAttributes
	hash key: URL
	attribute: 
		WORD_COUNT (int)
		TITLE (string)
		DESCRIPTION (string)
		MAX_WORD_FREQUENCY (integer)
	
2. algorithm:
2.1. relevance:
2.1.1. in dynamo db
	relevance is an 6-digit integer between 0 and 999999
	0 is the most relevant item (a little weird.. because in ascending order)
	relevance = word / (total_word_count + 1);
	relevance = 1000000 * relevance;
	relevance = 999999 - relevance;
2.1.2. in java api, in setUrl(url, relevance)
	relevance is a double between 0 and 1
	it's meaning is word / (total_word_count + 1)

2.2. stemming
	use porter stemmer
	1) remove special char
	2) to lower case
	3) stem

2.3. indexing, produce hits
	for every text with in one node:
	1) break with space (only space. so word such as U.S.A -> USA)
	2) remove special characters (including numbers), and save capitalization
	3) convert to lowercase
	4) stem 
	5) for continuous word and two word, produce hits
	6) won't set font at this time

2.4. capitalization:
	three status:
	0: no cap
	1: first letter upper case
	2: all cap
	for two-word, it's max(cap1, cap2)
	if one char and upper case, it's 2.
	